import streamlit as st
import fitz  # PyMuPDF
import io

# Chuy·ªÉn m√†u integer sang tuple RGB (0-1)
def int_to_rgb_tuple(color_int):
    r = ((color_int >> 16) & 255) / 255
    g = ((color_int >> 8) & 255) / 255
    b = (color_int & 255) / 255
    return (r, g, b)

st.set_page_config(page_title="PDF Text Replace", page_icon="üìù")
st.title("üîÑ Thay th·∫ø vƒÉn b·∫£n trong PDF (gi·ªØ v·ªã tr√≠, size & m√†u ch·ªØ)")

uploaded_file = st.file_uploader("üìÑ T·∫£i file PDF", type=["pdf"])
old_text = st.text_input("Chu·ªói c·∫ßn thay th·∫ø", value="VIETCARE MADRID 2018 S.L")
new_text = st.text_input("Chu·ªói thay th·∫ø", value="SUNFLOWER LOGISTIC SL")

if uploaded_file and old_text and new_text:
    if st.button("Thay th·∫ø v√† t·∫£i PDF"):
        pdf_bytes = uploaded_file.read()
        doc = fitz.open(stream=pdf_bytes, filetype="pdf")
        replace_count = 0

        for page in doc:
            text_dict = page.get_text("dict")["blocks"]
            for block in text_dict:
                if "lines" in block:
                    for line in block["lines"]:
                        for span in line["spans"]:
                            if old_text in span["text"]:
                                rects = page.search_for(span["text"])
                                for rect in rects:
                                    # Che ch·ªØ c≈©
                                    page.add_redact_annot(rect, fill=(1, 1, 1))
                                page.apply_redactions()

                                # Vi·∫øt ch·ªØ m·ªõi v√†o ƒë√∫ng v√πng c≈©, cƒÉn tr√°i
                                for rect in rects:
                                    page.insert_textbox(
                                        rect,
                                        span["text"].replace(old_text, new_text),
                                        fontsize=span["size"],
                                        fontname="helv",  # Font chu·∫©n ƒë·ªÉ tr√°nh l·ªói
                                        color=int_to_rgb_tuple(span["color"]),
                                        align=0  # 0 = cƒÉn tr√°i
                                    )
                                    replace_count += 1

        # Xu·∫•t PDF m·ªõi ra b·ªô nh·ªõ
        output_bytes = io.BytesIO()
        doc.save(output_bytes)
        doc.close()
        output_bytes.seek(0)

        st.success(f"‚úÖ ƒê√£ thay th·∫ø {replace_count} l·∫ßn!")
        st.download_button(
            label="‚¨áÔ∏è T·∫£i PDF ƒë√£ s·ª≠a",
            data=output_bytes,
            file_name="pdf_thay_the.pdf",
            mime="application/pdf"
        )
